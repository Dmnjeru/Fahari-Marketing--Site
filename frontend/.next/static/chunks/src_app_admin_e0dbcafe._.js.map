{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/njeru/fahari-marketing-site/frontend/src/app/admin/AdminLayoutClient.tsx"],"sourcesContent":["// frontend/src/app/admin/AdminLayoutClient.tsx\r\n\"use client\";\r\n\r\nimport React, { ReactNode, useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { Menu, X } from \"lucide-react\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\n\r\ninterface AdminLayoutClientProps {\r\n  children: ReactNode;\r\n  onLogout?: () => void;\r\n}\r\n\r\nexport default function AdminLayoutClient({ children, onLogout }: AdminLayoutClientProps) {\r\n  const pathname = usePathname();\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  // React Query client\r\n  const [queryClient] = useState(() => new QueryClient());\r\n\r\n  const navItems = [\r\n    { label: \"Dashboard\", href: \"/admin\" },\r\n    { label: \"Jobs\", href: \"/admin/jobs\" },\r\n    { label: \"Applications\", href: \"/admin/applications\" },\r\n    { label: \"Pages\", href: \"/admin/pages\" },\r\n  ];\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <div className=\"flex min-h-screen bg-violet-100\">\r\n        {/* Sidebar */}\r\n        <aside\r\n          className={`fixed inset-y-0 left-0 z-20 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out\r\n            ${sidebarOpen ? \"translate-x-0\" : \"-translate-x-full\"} md:translate-x-0 md:static md:inset-auto`}\r\n        >\r\n          <div className=\"h-16 flex items-center justify-center shadow-md font-bold text-xl border-b border-gray-200\">\r\n            Admin Panel\r\n          </div>\r\n\r\n          <nav className=\"p-4 space-y-2\">\r\n            {navItems.map((item) => (\r\n              <Link\r\n                key={item.href}\r\n                href={item.href}\r\n                className={`block px-4 py-2 rounded hover:bg-gray-200 ${\r\n                  pathname === item.href ? \"bg-yellow-200 font-semibold\" : \"\"\r\n                }`}\r\n              >\r\n                {item.label}\r\n              </Link>\r\n            ))}\r\n\r\n            {onLogout && (\r\n              <button\r\n                onClick={onLogout}\r\n                className=\"w-full text-left px-4 py-2 mt-4 rounded bg-red-600 text-black hover:bg-red-700\"\r\n              >\r\n                Logout\r\n              </button>\r\n            )}\r\n          </nav>\r\n        </aside>\r\n\r\n        {/* Main content */}\r\n        <div className=\"flex-1 flex flex-col min-h-screen md:pl-64\">\r\n          {/* Top navbar (mobile) */}\r\n          <header className=\"h-16 flex items-center justify-between px-4 bg-white shadow-md md:hidden\">\r\n            <div className=\"font-bold text-xl\">Admin Panel</div>\r\n            <button\r\n              onClick={() => setSidebarOpen(!sidebarOpen)}\r\n              className=\"p-2 rounded hover:bg-gray-200\"\r\n            >\r\n              {sidebarOpen ? <X size={24} /> : <Menu size={24} />}\r\n            </button>\r\n          </header>\r\n\r\n          <main className=\"flex-1 overflow-auto p-4\">{children}</main>\r\n        </div>\r\n      </div>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;AAG/C;AACA;AACA;AACA;AAAA;AACA;AAAA;;;AANA;;;;;;AAae,SAAS,kBAAkB,KAA8C;QAA9C,EAAE,QAAQ,EAAE,QAAQ,EAA0B,GAA9C;;IACxC,MAAM,WAAW,IAAA,oJAAW;IAC5B,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,yKAAQ,EAAC;IAE/C,qBAAqB;IACrB,MAAM,CAAC,YAAY,GAAG,IAAA,yKAAQ;sCAAC,IAAM,IAAI,+LAAW;;IAEpD,MAAM,WAAW;QACf;YAAE,OAAO;YAAa,MAAM;QAAS;QACrC;YAAE,OAAO;YAAQ,MAAM;QAAc;QACrC;YAAE,OAAO;YAAgB,MAAM;QAAsB;QACrD;YAAE,OAAO;YAAS,MAAM;QAAe;KACxC;IAED,qBACE,6LAAC,gNAAmB;QAAC,QAAQ;kBAC3B,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBACC,WAAW,AAAC,4HAC4C,OAApD,cAAc,kBAAkB,qBAAoB;;sCAExD,6LAAC;4BAAI,WAAU;sCAA6F;;;;;;sCAI5G,6LAAC;4BAAI,WAAU;;gCACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,0KAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,WAAW,AAAC,6CAEX,OADC,aAAa,KAAK,IAAI,GAAG,gCAAgC;kDAG1D,KAAK,KAAK;uCANN,KAAK,IAAI;;;;;gCAUjB,0BACC,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;8BAQP,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAO,WAAU;;8CAChB,6LAAC;oCAAI,WAAU;8CAAoB;;;;;;8CACnC,6LAAC;oCACC,SAAS,IAAM,eAAe,CAAC;oCAC/B,WAAU;8CAET,4BAAc,6LAAC,oMAAC;wCAAC,MAAM;;;;;6DAAS,6LAAC,6MAAI;wCAAC,MAAM;;;;;;;;;;;;;;;;;sCAIjD,6LAAC;4BAAK,WAAU;sCAA4B;;;;;;;;;;;;;;;;;;;;;;;AAKtD;GApEwB;;QACL,oJAAW;;;KADN","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/njeru/fahari-marketing-site/frontend/src/app/admin/page.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// frontend/src/app/admin/page.tsx\r\n\"use client\";\r\n\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport AdminLayoutClient from \"./AdminLayoutClient\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\ninterface DashboardData {\r\n  totalJobs: number;\r\n  totalApplications: number;\r\n}\r\n\r\nconst BACKEND_URL = process.env.NEXT_PUBLIC_API_BASE || \"http://localhost:5000\";\r\n\r\nfunction authHeaders(token: string | null | undefined) {\r\n  return token ? { Authorization: `Bearer ${token}` } : {};\r\n}\r\n\r\nexport default function AdminPage() {\r\n  const router = useRouter();\r\n\r\n  const [verifying, setVerifying] = useState<boolean>(true);\r\n  const [accessToken, setAccessToken] = useState<string | null>(null); // in-memory only\r\n  const [adminVerified, setAdminVerified] = useState<boolean>(false);\r\n\r\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\r\n  const [fetchError, setFetchError] = useState<string | null>(null);\r\n\r\n  const [loginEmail, setLoginEmail] = useState<string>(\"\");\r\n  const [loginPassword, setLoginPassword] = useState<string>(\"\");\r\n  const [loginError, setLoginError] = useState<string>(\"\");\r\n  const [loginLoading, setLoginLoading] = useState<boolean>(false);\r\n\r\n  /** Try to refresh access token using HttpOnly refresh cookie */\r\n  const tryRefresh = useCallback(async (): Promise<string | null> => {\r\n    try {\r\n      const res = await axios.post(`${BACKEND_URL}/api/admin/refresh`, {}, { withCredentials: true });\r\n      return res.data?.token ?? null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  /** Verify /me using provided access token */\r\n  const verifyWithToken = useCallback(async (token: string): Promise<boolean> => {\r\n    try {\r\n      const meRes = await axios.get(`${BACKEND_URL}/api/admin/me`, {\r\n        headers: authHeaders(token),\r\n        withCredentials: true,\r\n      });\r\n      return !!meRes.data?.success;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Generic fetch helper that will attempt one refresh+retry on 401.\r\n   * fn should be a function that accepts a token and performs the desired request.\r\n   */\r\n  const fetchWithAuth = useCallback(\r\n    async <T,>(fn: (token: string) => Promise<T>): Promise<T> => {\r\n      if (!accessToken) throw new Error(\"No access token available\");\r\n\r\n      try {\r\n        return await fn(accessToken);\r\n      } catch (err: unknown) {\r\n        if (axios.isAxiosError(err) && err.response?.status === 401) {\r\n          const newToken = await tryRefresh();\r\n          if (!newToken) {\r\n            setAccessToken(null);\r\n            setAdminVerified(false);\r\n            throw new Error(\"Session expired\");\r\n          }\r\n          setAccessToken(newToken);\r\n          return await fn(newToken);\r\n        }\r\n        throw err;\r\n      }\r\n    },\r\n    [accessToken, tryRefresh]\r\n  );\r\n\r\n  /** Boot: try refresh -> verify /me */\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const init = async () => {\r\n      try {\r\n        setVerifying(true);\r\n        const token = await tryRefresh();\r\n        if (!mounted) return;\r\n\r\n        if (!token) {\r\n          setAccessToken(null);\r\n          setAdminVerified(false);\r\n          return;\r\n        }\r\n\r\n        setAccessToken(token);\r\n        const ok = await verifyWithToken(token);\r\n        if (!mounted) return;\r\n        setAdminVerified(ok);\r\n      } finally {\r\n        if (mounted) setVerifying(false);\r\n      }\r\n    };\r\n\r\n    init();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [tryRefresh, verifyWithToken]);\r\n\r\n  /** Fetch dashboard data after verified */\r\n  useEffect(() => {\r\n    if (!adminVerified || !accessToken) return;\r\n\r\n    let mounted = true;\r\n    const fetchDashboard = async () => {\r\n      try {\r\n        setFetchError(null);\r\n\r\n        const jobsRes = await fetchWithAuth((token) =>\r\n          axios.get(`${BACKEND_URL}/api/admin/jobs/count`, {\r\n            headers: authHeaders(token),\r\n            withCredentials: true,\r\n          })\r\n        );\r\n\r\n        const appsRes = await fetchWithAuth((token) =>\r\n          axios.get(`${BACKEND_URL}/api/admin/applications/count`, {\r\n            headers: authHeaders(token),\r\n            withCredentials: true,\r\n          })\r\n        );\r\n\r\n        if (!mounted) return;\r\n\r\n        setDashboardData({\r\n          totalJobs: jobsRes.data?.count ?? 0,\r\n          totalApplications: appsRes.data?.count ?? 0,\r\n        });\r\n      } catch (_err: unknown) {\r\n        if (!mounted) return;\r\n        setFetchError(\"Failed to load dashboard data.\");\r\n      }\r\n    };\r\n\r\n    fetchDashboard();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [adminVerified, accessToken, fetchWithAuth]);\r\n\r\n  /** Login handler */\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoginError(\"\");\r\n    if (!loginEmail.trim() || !loginPassword.trim()) {\r\n      setLoginError(\"Email and password are required\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoginLoading(true);\r\n      const res = await axios.post(\r\n        `${BACKEND_URL}/api/admin/login`,\r\n        { email: loginEmail.trim(), password: loginPassword },\r\n        { withCredentials: true }\r\n      );\r\n\r\n      if (!res.data?.success) {\r\n        setLoginError(res.data?.message || \"Login failed\");\r\n        return;\r\n      }\r\n\r\n      const token = res.data?.token as string | undefined;\r\n      if (token) {\r\n        setAccessToken(token);\r\n        const verified = await verifyWithToken(token);\r\n        if (!verified) {\r\n          setLoginError(\"Unable to verify admin after login\");\r\n          setAccessToken(null);\r\n          setAdminVerified(false);\r\n          return;\r\n        }\r\n        setAdminVerified(true);\r\n      } else {\r\n        const refreshed = await tryRefresh();\r\n        if (!refreshed) {\r\n          setLoginError(\"Login succeeded but unable to obtain access token\");\r\n          return;\r\n        }\r\n        setAccessToken(refreshed);\r\n        const verified = await verifyWithToken(refreshed);\r\n        if (!verified) {\r\n          setLoginError(\"Unable to verify admin after login\");\r\n          setAccessToken(null);\r\n          setAdminVerified(false);\r\n          return;\r\n        }\r\n        setAdminVerified(true);\r\n      }\r\n\r\n      setLoginEmail(\"\");\r\n      setLoginPassword(\"\");\r\n    } catch (err: unknown) {\r\n      if (axios.isAxiosError(err)) {\r\n        const data = err.response?.data as { message?: string } | undefined;\r\n        setLoginError(data?.message ?? \"Server error\");\r\n      } else if (err instanceof Error) {\r\n        setLoginError(err.message);\r\n      } else {\r\n        setLoginError(\"Unexpected error\");\r\n      }\r\n    } finally {\r\n      setLoginLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await axios.post(`${BACKEND_URL}/api/admin/logout`, {}, { withCredentials: true });\r\n      setAccessToken(null);\r\n      setAdminVerified(false);\r\n    } catch {\r\n      setAccessToken(null);\r\n      setAdminVerified(false);\r\n    }\r\n  };\r\n\r\n  if (verifying) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen text-black-500\">\r\n        Verifying session...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!adminVerified) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen bg-blue-100 p-4\">\r\n        <form\r\n          onSubmit={handleLogin}\r\n          className=\"bg-white shadow-lg rounded-xl p-8 w-full max-w-md\"\r\n          aria-label=\"Admin login form\"\r\n        >\r\n          <h1 className=\"text-2xl font-bold mb-6 text-center\">Admin Login</h1>\r\n\r\n          {loginError && (\r\n            <div className=\"mb-4 text-sm text-red-700 bg-red-100 p-2 rounded\">{loginError}</div>\r\n          )}\r\n\r\n          <label className=\"block mb-2 font-medium\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={loginEmail}\r\n            onChange={(e) => setLoginEmail(e.target.value)}\r\n            className=\"w-full p-2 border rounded mb-4\"\r\n            required\r\n            autoComplete=\"username\"\r\n          />\r\n\r\n          <label className=\"block mb-2 font-medium\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            value={loginPassword}\r\n            onChange={(e) => setLoginPassword(e.target.value)}\r\n            className=\"w-full p-2 border rounded mb-6\"\r\n            required\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loginLoading}\r\n            className={`w-full bg-blue-600 text-white p-2 rounded ${\r\n              loginLoading ? \"opacity-60 cursor-not-allowed\" : \"hover:bg-blue-700\"\r\n            }`}\r\n          >\r\n            {loginLoading ? \"Logging in…\" : \"Login\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AdminLayoutClient onLogout={handleLogout}>\r\n      <div className=\"p-6\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">Admin Dashboard</h1>\r\n\r\n        {fetchError && <p className=\"text-red-500 mb-4\">{fetchError}</p>}\r\n\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          <div className=\"bg-white shadow rounded-lg p-6 flex flex-col items-start\">\r\n            <h2 className=\"text-lg font-semibold text-black-600 mb-2\">Total Jobs</h2>\r\n            <span className=\"text-3xl font-bold text-blue-600\">\r\n              {dashboardData?.totalJobs ?? \"—\"}\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"bg-white shadow rounded-lg p-6 flex flex-col items-start\">\r\n            <h2 className=\"text-lg font-semibold text-black-600 mb-2\">Total Applications</h2>\r\n            <span className=\"text-3xl font-bold text-green-600\">\r\n              {dashboardData?.totalApplications ?? \"—\"}\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"bg-white shadow rounded-lg p-6 flex flex-col items-start\">\r\n            <h2 className=\"text-lg font-semibold text-black-600 mb-2\">Quick Actions</h2>\r\n            <ul className=\"text-black-700 list-disc list-inside\">\r\n              <li>Create Job</li>\r\n              <li>Manage Applications</li>\r\n              <li>Edit Pages</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </AdminLayoutClient>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}