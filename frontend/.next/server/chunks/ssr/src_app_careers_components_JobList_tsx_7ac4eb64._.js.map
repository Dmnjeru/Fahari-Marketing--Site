{"version":3,"sources":["turbopack:///[project]/src/app/careers/components/JobList.tsx","turbopack:///[project]/src/app/careers/components/ApplicationForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport ApplicationForm from \"./ApplicationForm\";\r\nimport type { Job } from \"../types\";\r\n\r\nexport default function JobList({ jobs }: { jobs: Job[] }) {\r\n  const [selectedJob, setSelectedJob] = React.useState<Job | null>(null);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {jobs.length === 0 && (\r\n          <div className=\"p-8 bg-white rounded-2xl shadow text-center col-span-full\">\r\n            <h3 className=\"text-xl font-semibold\">No vacancies right now</h3>\r\n            <p className=\"text-slate-500 mt-2\">Check back later — new roles are posted frequently.</p>\r\n          </div>\r\n        )}\r\n\r\n        {jobs.map((job) => (\r\n          <motion.article\r\n            key={job._id}\r\n            layout\r\n            initial={{ opacity: 0, y: 10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"bg-white p-6 rounded-2xl shadow hover:shadow-lg transition\"\r\n          >\r\n            <h3 className=\"text-lg font-bold\">{job.title}</h3>\r\n            <p className=\"text-sm text-slate-600 mt-1\">{job.location} • {job.type}</p>\r\n            <p className=\"mt-2 text-slate-700 line-clamp-3\">{job.description}</p>\r\n            <button\r\n              onClick={() => setSelectedJob(job)}\r\n              className=\"mt-3 px-4 py-2 rounded-2xl bg-emerald-600 text-white text-sm hover:bg-emerald-700\"\r\n            >\r\n              Apply Now\r\n            </button>\r\n          </motion.article>\r\n        ))}\r\n      </div>\r\n\r\n      {selectedJob && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 p-4\">\r\n          <div className=\"bg-white rounded-2xl p-6 max-w-xl w-full relative overflow-y-auto max-h-[90vh]\">\r\n            <button\r\n              onClick={() => setSelectedJob(null)}\r\n              className=\"absolute top-4 right-4 text-slate-500 hover:text-slate-900\"\r\n            >\r\n              ✕\r\n            </button>\r\n            <ApplicationForm job={selectedJob} onSuccess={() => setSelectedJob(null)} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Job } from \"../types\";\r\n\r\nconst API = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5000\";\r\n\r\ntype Props = {\r\n  job: Job;\r\n  onSuccess?: () => void;\r\n};\r\n\r\nexport default function ApplicationForm({ job, onSuccess }: Props) {\r\n  const [fullName, setFullName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [phone, setPhone] = React.useState(\"\");\r\n  const [coverLetter, setCoverLetter] = React.useState(\"\");\r\n  const [file, setFile] = React.useState<File | null>(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [progress, setProgress] = React.useState<number | null>(null);\r\n  const [error, setError] = React.useState<string | null>(null);\r\n  const [success, setSuccess] = React.useState<string | null>(null);\r\n\r\n  const maxFileMB = 5;\r\n  const allowed = [\".pdf\", \".doc\", \".docx\"];\r\n\r\n  function validate(): string | null {\r\n    if (!fullName.trim()) return \"Full name is required\";\r\n    if (!email.trim()) return \"Email is required\";\r\n    if (!phone.trim()) return \"Phone is required\";\r\n    if (!file) return \"Please attach your CV (PDF/DOC/DOCX)\";\r\n    const ext = file.name.slice(((file.name.lastIndexOf(\".\") - 1) >>> 0) + 2).toLowerCase();\r\n    if (!allowed.includes(`.${ext}`)) return \"CV must be a PDF, DOC or DOCX file\";\r\n    if (file.size > maxFileMB * 1024 * 1024) return `CV must be smaller than ${maxFileMB} MB`;\r\n    return null;\r\n  }\r\n\r\n  const handleFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setError(null);\r\n    const f = e.target.files?.[0] ?? null;\r\n    setFile(f);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setSuccess(null);\r\n\r\n    const v = validate();\r\n    if (v) {\r\n      setError(v);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setProgress(0);\r\n\r\n      const form = new FormData();\r\n      form.append(\"jobId\", job._id);\r\n      form.append(\"fullName\", fullName);\r\n      form.append(\"email\", email);\r\n      form.append(\"phone\", phone);\r\n      if (coverLetter) form.append(\"coverLetter\", coverLetter);\r\n      if (file) form.append(\"cv\", file, file.name);\r\n\r\n      await new Promise<void>((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", `${API}/api/careers/apply`, true);\r\n\r\n        xhr.upload.onprogress = (evt) => {\r\n          if (evt.lengthComputable) {\r\n            setProgress(Math.round((evt.loaded / evt.total) * 100));\r\n          }\r\n        };\r\n\r\n        xhr.onload = () => {\r\n          setLoading(false);\r\n          setProgress(null);\r\n          if (xhr.status >= 200 && xhr.status < 300) {\r\n            try {\r\n              const resp = JSON.parse(xhr.responseText);\r\n              setSuccess(resp.message || \"Application submitted successfully\");\r\n              setFullName(\"\");\r\n              setEmail(\"\");\r\n              setPhone(\"\");\r\n              setCoverLetter(\"\");\r\n              setFile(null);\r\n              if (onSuccess) onSuccess();\r\n              resolve();\r\n            } catch {\r\n              resolve();\r\n            }\r\n          } else {\r\n            let msg = `Submission failed (${xhr.status})`;\r\n            try {\r\n              const j = JSON.parse(xhr.responseText);\r\n              msg = j?.message || j?.errors?.[0]?.msg || msg;\r\n            } catch {}\r\n            setError(msg);\r\n            reject(new Error(msg));\r\n          }\r\n        };\r\n\r\n        xhr.onerror = () => {\r\n          setLoading(false);\r\n          setProgress(null);\r\n          setError(\"Network error. Please try again.\");\r\n          reject(new Error(\"Network error\"));\r\n        };\r\n\r\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n        xhr.send(form);\r\n      });\r\n    } catch (err: unknown) {\r\n      if (err instanceof Error) setError(err.message || \"Failed to submit application\");\r\n      else setError(\"Failed to submit application\");\r\n      setLoading(false);\r\n      setProgress(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"bg-emerald-50 rounded-2xl p-6\">\r\n      <h3 className=\"text-lg font-semibold\">Apply for {job.title}</h3>\r\n      <p className=\"text-sm text-slate-600 mt-1\">Fill this form and attach your CV.</p>\r\n\r\n      <div className=\"mt-4 space-y-3\">\r\n        <input\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          placeholder=\"Full name\"\r\n          className=\"w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-emerald-200\"\r\n        />\r\n        <input\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email address\"\r\n          type=\"email\"\r\n          className=\"w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-emerald-200\"\r\n        />\r\n        <input\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          placeholder=\"Phone number\"\r\n          className=\"w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-emerald-200\"\r\n        />\r\n        <textarea\r\n          value={coverLetter}\r\n          onChange={(e) => setCoverLetter(e.target.value)}\r\n          placeholder=\"Cover letter (optional, max 1500 characters)\"\r\n          className=\"w-full px-4 py-2 rounded-lg border focus:ring-2 focus:ring-emerald-200 min-h-[120px]\"\r\n        />\r\n        <label className=\"block\">\r\n          <span className=\"text-sm text-slate-700\">Attach CV (PDF, DOC, DOCX, max {maxFileMB}MB)</span>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".pdf,.doc,.docx,application/msword,application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n            onChange={handleFile}\r\n            className=\"mt-2\"\r\n            aria-label=\"Upload CV\"\r\n            required\r\n          />\r\n          {file && <div className=\"text-xs text-slate-600 mt-1\">{file.name} • {(file.size / 1024 / 1024).toFixed(2)} MB</div>}\r\n        </label>\r\n\r\n        {progress !== null && (\r\n          <div className=\"w-full bg-slate-200 rounded-full h-2 mt-2\">\r\n            <div style={{ width: `${progress}%` }} className=\"h-2 rounded-full bg-emerald-600\" />\r\n            <div className=\"text-xs text-slate-500 mt-1\">{progress}%</div>\r\n          </div>\r\n        )}\r\n\r\n        {error && <div className=\"text-sm text-red-600\">{error}</div>}\r\n        {success && <div className=\"text-sm text-emerald-700\">{success}</div>}\r\n\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"px-4 py-2 rounded-2xl bg-emerald-600 text-white font-semibold hover:bg-emerald-700 transition disabled:opacity-60\"\r\n          >\r\n            {loading ? \"Submitting…\" : \"Submit Application\"}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              setFullName(\"\");\r\n              setEmail(\"\");\r\n              setPhone(\"\");\r\n              setCoverLetter(\"\");\r\n              setFile(null);\r\n              setError(null);\r\n              setSuccess(null);\r\n            }}\r\n            className=\"px-4 py-2 rounded-2xl border text-sm\"\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}