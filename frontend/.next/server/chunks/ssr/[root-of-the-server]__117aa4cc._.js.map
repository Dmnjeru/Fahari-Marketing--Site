{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/njeru/fahari-marketing-site/frontend/src/app/blog/BlogList.tsx"],"sourcesContent":["// frontend/src/app/blog/BlogList.tsx\r\n\"use client\";\r\n\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { io, Socket } from \"socket.io-client\";\r\n\r\ntype BlogPost = {\r\n  _id?: string; // primary identifier (Mongo)\r\n  id?: string; // fallback id\r\n  slug: string;\r\n  title: string;\r\n  excerpt?: string;\r\n  image?: string;\r\n  views?: number;\r\n  category?: string;\r\n  author?: string;\r\n  isPublished?: boolean;\r\n  createdAt?: string;\r\n};\r\n\r\ninterface BlogListProps {\r\n  blogs: BlogPost[]; // initial list from server\r\n  socketBase?: string; // optional socket base (e.g. \"http://localhost:5000\")\r\n  highlightMs?: number; // how long to highlight new posts (ms)\r\n}\r\n\r\n/**\r\n * BlogList - client component that renders a grid of blog cards and\r\n * listens to real-time updates via Socket.IO.\r\n */\r\nexport default function BlogList({ blogs, socketBase, highlightMs = 6000 }: BlogListProps) {\r\n  // Local state of posts (client-managed)\r\n  const [posts, setPosts] = useState<BlogPost[]>(blogs ?? []);\r\n  const [connected, setConnected] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Keep track of newly added/updated posts to highlight them temporarily\r\n  const [highlighted, setHighlighted] = useState<Record<string, boolean>>({});\r\n  const highlightTimers = useRef<Record<string, number>>({});\r\n\r\n  // Socket ref so we can disconnect on unmount\r\n  const socketRef = useRef<Socket | null>(null);\r\n\r\n  // Determine socket base (prefer prop, fallback to env, else undefined => same-origin)\r\n  const socketUrl = useMemo(() => {\r\n    if (socketBase && socketBase.trim() !== \"\") return socketBase.replace(/\\/$/, \"\");\r\n    const envBase = (process.env.NEXT_PUBLIC_API_URL ?? \"\").replace(/\\/$/, \"\");\r\n    return envBase || undefined;\r\n  }, [socketBase]);\r\n\r\n  // Helper: set highlight for an id, auto-clear after highlightMs\r\n  const markHighlighted = (id?: string) => {\r\n    if (!id) return;\r\n    setHighlighted((s) => ({ ...s, [id]: true }));\r\n    if (highlightTimers.current[id]) {\r\n      window.clearTimeout(highlightTimers.current[id]);\r\n    }\r\n    highlightTimers.current[id] = window.setTimeout(() => {\r\n      setHighlighted((s) => {\r\n        const copy = { ...s };\r\n        delete copy[id];\r\n        return copy;\r\n      });\r\n      delete highlightTimers.current[id];\r\n    }, highlightMs);\r\n  };\r\n\r\n  // Connect to Socket.IO\r\n  useEffect(() => {\r\n    // Only run in browser\r\n    if (typeof window === \"undefined\") return;\r\n\r\n    // Avoid connecting more than once\r\n    try {\r\n      const socket = io(socketUrl as any, {\r\n        path: \"/socket.io\",\r\n        transports: [\"websocket\", \"polling\"],\r\n        autoConnect: true,\r\n      });\r\n\r\n      socketRef.current = socket;\r\n\r\n      socket.on(\"connect\", () => {\r\n        setConnected(true);\r\n        setError(null);\r\n      });\r\n\r\n      socket.on(\"connect_error\", (err: unknown) => {\r\n        setConnected(false);\r\n        // show a compact error but don't spam\r\n        setError(\"Realtime connection failed. Showing static posts.\");\r\n        console.warn(\"Socket connect_error:\", err);\r\n      });\r\n\r\n      socket.on(\"disconnect\", () => {\r\n        setConnected(false);\r\n      });\r\n\r\n      // New blog created\r\n      socket.on(\"blog:created\", (payload: BlogPost) => {\r\n        if (!payload) return;\r\n        // Only show published posts\r\n        if (payload.isPublished === false) return;\r\n\r\n        setPosts((prev) => {\r\n          // avoid duplicates (by _id or slug)\r\n          const exists = prev.some((p) => (p._id && payload._id && p._id === payload._id) || (p.slug === payload.slug));\r\n          if (exists) {\r\n            // replace existing\r\n            return prev.map((p) => ((p._id && payload._id && p._id === payload._id) || p.slug === payload.slug ? payload : p));\r\n          }\r\n          // insert at top\r\n          return [payload, ...prev];\r\n        });\r\n\r\n        markHighlighted(payload._id ?? payload.slug);\r\n      });\r\n\r\n      // Blog updated\r\n      socket.on(\"blog:updated\", (payload: BlogPost) => {\r\n        if (!payload) return;\r\n        setPosts((prev) => {\r\n          const idx = prev.findIndex((p) => (p._id && payload._id && p._id === payload._id) || p.slug === payload.slug);\r\n          if (idx === -1) {\r\n            // If updated post is published, add it\r\n            if (payload.isPublished === false) return prev;\r\n            return [payload, ...prev];\r\n          }\r\n          // If updated to unpublished, remove from list\r\n          if (payload.isPublished === false) {\r\n            return prev.filter((p) => !((p._id && payload._id && p._id === payload._id) || p.slug === payload.slug));\r\n          }\r\n          // Replace item\r\n          const copy = [...prev];\r\n          copy[idx] = payload;\r\n          return copy;\r\n        });\r\n        markHighlighted(payload._id ?? payload.slug);\r\n      });\r\n\r\n      // Blog deleted\r\n      socket.on(\"blog:deleted\", (payload: { _id?: string; slug?: string }) => {\r\n        if (!payload) return;\r\n        setPosts((prev) => prev.filter((p) => !( (payload._id && p._id === payload._id) || (payload.slug && p.slug === payload.slug) )));\r\n      });\r\n\r\n      // cleanup on unmount\r\n      return () => {\r\n        try {\r\n          if (socket) {\r\n            socket.off();\r\n            socket.disconnect();\r\n          }\r\n        } catch (e) {\r\n          /* ignore */\r\n        }\r\n        // clear highlight timers\r\n        Object.values(highlightTimers.current).forEach((t) => window.clearTimeout(t));\r\n        highlightTimers.current = {};\r\n      };\r\n    } catch (err) {\r\n      console.error(\"Realtime socket initialization failed:\", err);\r\n      setError(\"Realtime unavailable.\");\r\n      setConnected(false);\r\n    }\r\n  }, [socketUrl, highlightMs]);\r\n\r\n  // Render card\r\n  const renderCard = (blog: BlogPost, idx: number) => {\r\n    const idKey = blog._id ?? blog.id ?? blog.slug;\r\n    const isNew = !!(idKey && highlighted[idKey]);\r\n    return (\r\n      <motion.article\r\n        key={idKey}\r\n        initial={{ opacity: 0, y: 12 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.45, delay: idx * 0.06 }}\r\n        className={`bg-white rounded-2xl shadow-sm hover:shadow-md overflow-hidden flex flex-col border ${\r\n          isNew ? \"ring-2 ring-emerald-300\" : \"\"\r\n        }`}\r\n      >\r\n        {blog.image ? (\r\n          <div className=\"relative w-full h-48\">\r\n            {/* next/image with fill requires parent relative */}\r\n            <Image src={blog.image} alt={blog.title} fill className=\"object-cover\" sizes=\"(max-width: 768px) 100vw, 33vw\" />\r\n          </div>\r\n        ) : (\r\n          <div className=\"w-full h-48 bg-gray-100 flex items-center justify-center text-gray-400\">No image</div>\r\n        )}\r\n\r\n        <div className=\"p-5 flex flex-col flex-1\">\r\n          <h3 className=\"text-lg font-semibold line-clamp-2\">{blog.title}</h3>\r\n\r\n          <p className=\"text-sm text-gray-600 mt-2 flex-1 line-clamp-3\">{blog.excerpt ?? \"Read more...\"}</p>\r\n\r\n          <div className=\"mt-4 flex items-center justify-between text-xs text-gray-500\">\r\n            <div>{blog.category ?? \"Uncategorized\"}</div>\r\n            <div>{typeof blog.views === \"number\" ? `${blog.views} views` : null}</div>\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Link href={`/blog/${blog.slug}`} className=\"inline-block text-emerald-600 font-medium hover:underline\">\r\n              Read More â†’\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </motion.article>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"max-w-7xl mx-auto\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className=\"text-xl font-semibold\">Latest posts</h2>\r\n        <div className=\"text-sm text-gray-500 flex items-center gap-3\">\r\n          <span className={`px-2 py-1 rounded-full text-xs ${connected ? \"bg-emerald-100 text-emerald-700\" : \"bg-gray-100 text-gray-500\"}`}>\r\n            {connected ? \"Live\" : \"Offline\"}\r\n          </span>\r\n          {error && <span className=\"text-xs text-red-600\">{error}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n        {posts.map((p, i) => renderCard(p, i))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}